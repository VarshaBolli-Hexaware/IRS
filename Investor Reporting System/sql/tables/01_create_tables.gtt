-- Core tables for Sample Investor Reporting System

-- Loan Master table
CREATE GLOBAL TEMPORARY TABLE loan_master (
    loan_id             VARCHAR2(20) PRIMARY KEY,
    fannie_loan_number  VARCHAR2(12) UNIQUE,
    origination_date    DATE,
    original_amount     NUMBER(12,2),
    current_balance     NUMBER(12,2),
    interest_rate       NUMBER(5,4),
    loan_term_months    NUMBER(3),
    remaining_term      NUMBER(3),
    next_payment_date   DATE,
    last_payment_date   DATE,
    status             VARCHAR2(20),
    modification_flag   CHAR(1),
    created_date       DATE DEFAULT SYSDATE,
    modified_date      DATE DEFAULT SYSDATE,
    CONSTRAINT chk_loan_status CHECK (status IN ('ACTIVE', 'PAID_OFF', 'DEFAULT', 'FORECLOSURE', 'REO'))
);

-- Pool Definition table
CREATE GLOBAL TEMPORARY TABLE pool_definition (
    pool_id            VARCHAR2(12) PRIMARY KEY,
    pool_type          VARCHAR2(10),
    issue_date         DATE,
    original_amount    NUMBER(12,2),
    current_amount     NUMBER(12,2),
    pool_factor        NUMBER(8,7),
    weighted_rate      NUMBER(5,4),
    payment_delay_days NUMBER(2),
    performance_score  NUMBER,
    delinquency_rate   NUMBER,
    loss_severity      NUMBER,
    last_performance_update DATE,
    market_value       NUMBER,
    yield_rate         NUMBER,
    created_date       DATE DEFAULT SYSDATE,
    modified_date      DATE DEFAULT SYSDATE,
    CONSTRAINT chk_pool_type CHECK (pool_type IN ('SF', 'ARM', 'BALLOON', 'OTHER'))
);

-- Pool-Loan Relationship table
CREATE GLOBAL TEMPORARY TABLE pool_loan_xref (
    pool_id           VARCHAR2(12),
    loan_id           VARCHAR2(20),
    participation_pct NUMBER(5,4),
    active_flag       CHAR(1),
    created_date      DATE DEFAULT SYSDATE,
    modified_date     DATE DEFAULT SYSDATE,
    CONSTRAINT pk_pool_loan PRIMARY KEY (pool_id, loan_id),
    CONSTRAINT fk_pool_loan_pool FOREIGN KEY (pool_id) REFERENCES pool_definition(pool_id),
    CONSTRAINT fk_pool_loan_loan FOREIGN KEY (loan_id) REFERENCES loan_master(loan_id)
);

-- Payment Transaction table
CREATE GLOBAL TEMPORARY TABLE payment_transaction (
    transaction_id    NUMBER(15) PRIMARY KEY,
    loan_id           VARCHAR2(20),
    transaction_date  DATE,
    due_date         DATE,
    payment_amount    NUMBER(12,2),
    principal_amount  NUMBER(12,2),
    interest_amount   NUMBER(12,2),
    other_amount     NUMBER(12,2),
    transaction_type VARCHAR2(20),
    status          VARCHAR2(15),
    created_date    DATE DEFAULT SYSDATE,
    modified_date   DATE DEFAULT SYSDATE,
    CONSTRAINT fk_payment_loan FOREIGN KEY (loan_id) REFERENCES loan_master(loan_id),
    CONSTRAINT chk_payment_status CHECK (status IN ('PENDING', 'PROCESSED', 'REVERSED', 'FAILED'))
);

-- Investor Remittance table
CREATE GLOBAL TEMPORARY TABLE investor_remittance (
    remittance_id     NUMBER(15) PRIMARY KEY,
    pool_id           VARCHAR2(12),
    remittance_date   DATE,
    principal_amount  NUMBER(12,2),
    interest_amount   NUMBER(12,2),
    pool_factor       NUMBER(8,7),
    status           VARCHAR2(15),
    created_date     DATE DEFAULT SYSDATE,
    modified_date    DATE DEFAULT SYSDATE,
    CONSTRAINT fk_remittance_pool FOREIGN KEY (pool_id) REFERENCES pool_definition(pool_id),
    CONSTRAINT chk_remittance_status CHECK (status IN ('PENDING', 'PROCESSED', 'FAILED'))
);

-- Exception Log table
CREATE GLOBAL TEMPORARY TABLE exception_log (
    exception_id     NUMBER(15) PRIMARY KEY,
    loan_id          VARCHAR2(20),
    pool_id          VARCHAR2(12),
    exception_type   VARCHAR2(50),
    exception_desc   VARCHAR2(4000),
    severity        VARCHAR2(10),
    status          VARCHAR2(15),
    created_date    DATE DEFAULT SYSDATE,
    resolved_date   DATE,
    CONSTRAINT fk_exception_loan FOREIGN KEY (loan_id) REFERENCES loan_master(loan_id),
    CONSTRAINT fk_exception_pool FOREIGN KEY (pool_id) REFERENCES pool_definition(pool_id),
    CONSTRAINT chk_exception_severity CHECK (severity IN ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')),
    CONSTRAINT chk_exception_status CHECK (status IN ('NEW', 'IN_PROGRESS', 'RESOLVED', 'CLOSED'))
);

-- Loan Status History table
CREATE GLOBAL TEMPORARY TABLE loan_status_history (
    loan_id VARCHAR2(20),
    old_status VARCHAR2(20),
    new_status VARCHAR2(20),
    change_date DATE,
    reason_code VARCHAR2(10),
    comments VARCHAR2(1000),
    created_by VARCHAR2(30),
    created_date DATE DEFAULT SYSDATE,
    CONSTRAINT fk_status_hist_loan FOREIGN KEY (loan_id) 
        REFERENCES loan_master(loan_id)
);

-- Monthly Reports table
CREATE GLOBAL TEMPORARY TABLE monthly_reports (
    report_id NUMBER PRIMARY KEY,
    pool_id VARCHAR2(20),
    report_date DATE,
    report_content CLOB,
    created_date DATE,
    created_by VARCHAR2(30),
    CONSTRAINT fk_monthly_report_pool FOREIGN KEY (pool_id) 
        REFERENCES pool_definition(pool_id)
);

-- Create sequences for ID columns
CREATE SEQUENCE loan_id_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE transaction_id_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE remittance_id_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE exception_id_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE monthly_report_seq START WITH 1 INCREMENT BY 1;

-- Create indexes for better performance
CREATE INDEX idx_loan_fannie_num ON loan_master(fannie_loan_number);
CREATE INDEX idx_loan_status ON loan_master(status);
CREATE INDEX idx_pool_type ON pool_definition(pool_type);
CREATE INDEX idx_payment_loan_date ON payment_transaction(loan_id, transaction_date);
CREATE INDEX idx_remittance_pool_date ON investor_remittance(pool_id, remittance_date);
CREATE INDEX idx_exception_loan ON exception_log(loan_id);
CREATE INDEX idx_exception_status ON exception_log(status); 

-- Missing loan_status_history table referenced in loan_servicing_pkg

-- Missing monthly_reports table referenced in pool_performance_pkg

